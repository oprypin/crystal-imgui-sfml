name: CI

on:
  push:
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 6 * * 6'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - crystal: nightly
            os: ubuntu-latest
          - crystal: latest
            os: macos-latest
    runs-on: ${{matrix.os}}
    steps:
      - name: Install Crystal
        uses: oprypin/install-crystal@v1
        with:
          crystal: ${{matrix.crystal}}
      - name: Install packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get -q update
          sudo apt-get -qy --no-install-recommends --no-upgrade install cmake libflac-dev libfreetype6-dev libgl1-mesa-dev libopenal-dev libudev-dev libvorbis-dev libx11-dev libxrandr-dev
      - name: Cache SFML
        id: cache-sfml
        uses: actions/cache@v1
        with:
          path: sfml
          key: sfml-2.5.1-${{runner.os}}
      - name: Download SFML source
        if: steps.cache-sfml.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: SFML/SFML
          ref: 2.5.1
          path: sfml
      - name: Build SFML
        if: steps.cache-sfml.outputs.cache-hit != 'true'
        working-directory: sfml
        run: |
          cmake . -DCMAKE_BUILD_TYPE=Release
          cmake --build . -j4
      - name: Install SFML
        working-directory: sfml
        run: |
          sudo make install
      - name: Download source
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Check code formatting
        if: matrix.crystal == 'latest'
        run: |
          crystal tool format --check
      - name: Install shards
        run: |
          shards install
      - name: Build
        run: |
          make -j
      - name: Build docs
        run: |
          .util/build_docs.sh
      - name: Build examples
        run: |
          echo examples/*.cr | xargs -n1 -t crystal build
      - name: Start virtual display
        if: runner.os == 'Linux'
        run: |
          echo "::set-env name=DISPLAY:::99.0"
          Xvfb :99 -screen 0 1024x768x24 +extension GLX &
      - name: Run example
        run: |
          LD_LIBRARY_PATH="$(pwd):/usr/local/lib" ./simple &
          pid=$!; sleep 3; kill $pid
      - name: Deploy docs to gh-pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && runner.os == 'Linux'
        uses: oprypin/push-to-gh-pages@v3
        with:
          publish_dir: ./docs
